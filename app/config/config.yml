imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: %locale% }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: "%kernel.debug%"
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:      { engines: ['twig'] } #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        save_path: "%kernel.root_dir%/sessions/"

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    globals:
        locales: %localesavailable%

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ "FOSCommentBundle", "TaskBundle", "FileBundle", "MainBundle", "FriendBundle", "MessageBundle", "UserBundle", "LexikMailerBundle", "SonataUserBundle" ]
    java: /usr/bin/java
    filters:
        cssrewrite: ~
        less:
            node: /usr/bin/node
            node_paths: [/usr/lib/nodejs]
            apply_to: "\.less$"
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        yui_css:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
            enum: string
        types:
            TaskStatusType: Taskul\TaskBundle\DBAL\Types\TaskStatusType
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: public
    user_class: Taskul\UserBundle\Entity\User
    group:
        group_class:  Taskul\UserBundle\Entity\Group
    from_email:
        address: camilocot@gmail.com
        sender_name: Taskul.net
    registration:
        confirmation:
            enabled: false
        form:
            type: taskul_user_registration
    resetting:
        form:
            type: taskul_user_resetting
    profile:
        form:
            type: taskul_user_profile

fos_facebook:
    #file:   %kernel.root_dir%/../vendor/facebook/php-sdk/src/base_facebook.php
    alias:  facebook
    app_id: 433353293400449
    secret: 83dfc9e8a8b14b568a2ff545ff654313
    cookie: true
    permissions: [email, user_birthday, user_location]

knp_menu:
    twig:  # use "twig: false" to disable the Twig extension and the TwigRenderer
        template: "MainBundle:Menu:main.html.twig"
    templating: false # if true, enables the helper for PHP templates
    default_renderer: twig # The renderer to use, list is also available by default
    providers:
        builder_alias: false    # enable the builder-based provider
        container_aware: true # disable default

fos_comment:
    db_driver: orm
    acl: true
    service:
        manager:
            thread:  fos_comment.manager.thread.acl
            comment: fos_comment.manager.comment.acl
            vote:    fos_comment.manager.vote.acl
        acl:
            thread:  fos_comment.acl.thread.security
            comment: fos_comment.acl.comment.security
            vote:    taskul_comment.acl.vote.security
        markup: markup.exercise_html_purifier
    class:
        model:
            comment: Taskul\CommentBundle\Entity\Comment
            thread: Taskul\CommentBundle\Entity\Thread
            vote: Taskul\CommentBundle\Entity\Vote

fos_message:
    db_driver: orm
    thread_class: Taskul\MessageBundle\Entity\Thread
    message_class: Taskul\MessageBundle\Entity\Message
    new_thread_form:
        type:               taskul_message.new_thread_form.type

fpn_tag:
    model:
        tag_class:     Taskul\TagBundle\Entity\Tag
        tagging_class: Taskul\TagBundle\Entity\Tagging

apy_breadcrumb_trail:
    template: MainBundle::breadcrumbtrail.html.twig

fos_js_routing:
    routes_to_expose:
        - "^[es|en]__api_.*" # expose all routes with a name starting with api_
        - api_count_task_list_status
        - api_get_tags
        - api_list_task_status

jms_serializer:
    metadata:
        directories:
            FOSUB:
                namespace_prefix: FOS\UserBundle
                path: %kernel.root_dir%/serializer/FOSUB

jms_serializer:
  metadata:
    auto_detection: true
    directories:
      FOSUserBundle:
        namespace_prefix: "FOS\\UserBundle"
        path: "@UserBundle/Resources/config/serializer/fos"

fos_rest:
    format_listener:
        default_priorities: [ html, 'json', '*/*']
        fallback_format: json
        prefer_extension: true

spy_timeline:
    drivers:
        orm:
            object_manager: doctrine.orm.entity_manager
            classes:
                query_builder: ~ # Spy\TimelineBundle\Driver\ORM\QueryBuilder\QueryBuilder
                timeline:  Taskul\TimelineBundle\Entity\Timeline
                action:    Taskul\TimelineBundle\Entity\Action
                component: Taskul\TimelineBundle\Entity\Component
                action_component: Taskul\TimelineBundle\Entity\ActionComponent
    filters:
        duplicate_key:
            priority: 10
        data_hydrator:
            priority: 20
            filter_unresolved: true
            locators:
                - spy_timeline.filter.data_hydrator.locator.doctrine_orm
    notifiers:
        - taskul_timeline.unread_notifications
    render:
        path:     'TimelineBundle:Timeline/verbs'
        fallback: 'TimelineBundle:Timeline:default.html.twig'
        resources:
            - 'TimelineBundle:Timeline:components.html.twig'
        i18n:
            fallback: es
ornicar_gravatar: ~
ornicar_akismet:
    api_key:        8bc2c0d9bb02
    url:            http://www.taskul.net

lexik_mailer:
    admin_email: camilocot@gmail.com
    templating_extensions:
        - 'twig.extension.trans'

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # sonata_admin_doctrine_phpcr.tree_block:
        #     settings:
        #         id: '/cms'
        #     contexts:   [admin]

        #sonata.admin_doctrine_orm.block.audit:
        #    contexts:   [admin]

        sonata.block.service.text:
        sonata.block.service.rss:

        # Some specific block from the SonataMediaBundle
        #sonata.media.block.media:
        #sonata.media.block.gallery:
        #sonata.media.block.feature_media:

sonata_doctrine_orm_admin:
    # default value is null, so doctrine uses the value defined in the configuration
    entity_manager: ~

    templates:
        form:
            - SonataDoctrineORMAdminBundle:Form:form_admin_fields.html.twig
        filter:
            - SonataDoctrineORMAdminBundle:Form:filter_admin_fields.html.twig
        types:
            list:
                array:      SonataAdminBundle:CRUD:list_array.html.twig
                boolean:    SonataAdminBundle:CRUD:list_boolean.html.twig
                date:       SonataAdminBundle:CRUD:list_date.html.twig
                time:       SonataAdminBundle:CRUD:list_time.html.twig
                datetime:   SonataAdminBundle:CRUD:list_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_list_field.html.twig
                trans:      SonataAdminBundle:CRUD:list_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_list_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_list_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_list_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_list_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_list_field.html.twig
                identifier: SonataAdminBundle:CRUD:base_list_field.html.twig

            show:
                array:      SonataAdminBundle:CRUD:show_array.html.twig
                boolean:    SonataAdminBundle:CRUD:show_boolean.html.twig
                date:       SonataAdminBundle:CRUD:show_date.html.twig
                time:       SonataAdminBundle:CRUD:show_time.html.twig
                datetime:   SonataAdminBundle:CRUD:show_datetime.html.twig
                text:       SonataAdminBundle:CRUD:base_show_field.html.twig
                trans:      SonataAdminBundle:CRUD:show_trans.html.twig
                string:     SonataAdminBundle:CRUD:base_show_field.html.twig
                smallint:   SonataAdminBundle:CRUD:base_show_field.html.twig
                bigint:     SonataAdminBundle:CRUD:base_show_field.html.twig
                integer:    SonataAdminBundle:CRUD:base_show_field.html.twig
                decimal:    SonataAdminBundle:CRUD:base_show_field.html.twig

sonata_admin:
    security:
        handler: sonata.admin.security.handler.acl
        information:
            GUEST:    [VIEW, LIST]
            STAFF:    [EDIT, LIST, CREATE]
            EDITOR:   [OPERATOR, EXPORT]
            ADMIN:    [MASTER]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]

    title:      Sonata Project
    title_logo: /bundles/sonataadmin/logo_title.png
    templates:
        # default global templates
        layout:  SonataAdminBundle::standard_layout.html.twig
        ajax:    SonataAdminBundle::ajax_layout.html.twig
        dashboard: SonataAdminBundle:Core:dashboard.html.twig

        # default actions templates, should extend a global templates
        list:    SonataAdminBundle:CRUD:list.html.twig
        show:    SonataAdminBundle:CRUD:show.html.twig
        edit:    SonataAdminBundle:CRUD:edit.html.twig

    dashboard:
        blocks:
            # display a dashboard block
            - { position: left, type: sonata.admin.block.admin_list }
            # - { position: left, type: sonata_admin_doctrine_phpcr.tree_block }

            # Customize this part to add new block configuration
            - { position: right, type: sonata.block.service.text, settings: { content: "<h2>Welcome to the Sonata Admin</h2> <p>This is a <code>sonata.block.service.text</code> from the Block Bundle, you can create and add new block in these area by configuring the <code>sonata_admin</code> section.</p> <br /> For instance, here a RSS feed parser (<code>sonata.block.service.rss</code>):"} }
            - { position: right, type: sonata.block.service.rss, settings: { title: Sonata Project's Feeds, url: http://sonata-project.org/blog/archive.rss }}

    # set to true to persist filter settings per admin module in the user's session
    # persist_filters: false
sonata_user:
    security_acl: true
    manager_type: orm # can be orm or mongodb
    class:                  # Entity Classes
        user:               Taskul\UserBundle\Entity\User
        group:              Taskul\UserBundle\Entity\Group

jms_i18n_routing:
    default_locale: %locale%
    locales: %localesavailable%
    strategy: prefix

ornicar_apc:
    host: http://www.taskul.net
    web_dir: %kernel.root_dir%/../web
    mode: curl

fm_bbcode:
    filter_sets:
        my_comment_filter:
            locale: %locale%
            xhtml: true
            filters: [ default, block, code, email, list, quote, text, url ]
            hooks: [ emoticon, censor ]
        my_description_filter:
            locale: %locale%
            xhtml: true
            filters: [ default, block, code, email, image, list, quote, text, url, video ]
            hooks: [ emoticon ]
        my_message_filter:
            locale: %locale%
            xhtml: true
            filters: [ default, block, code, email, image, list, quote, text, url, video ]
            hooks: [ emoticon, censor ]

fos_oauth_server:
    db_driver: orm       # Driver availables: orm, mongodb, or propel
    client_class:        Taskul\OAuthServerBundle\Entity\Client
    access_token_class:  Taskul\OAuthServerBundle\Entity\AccessToken
    refresh_token_class: Taskul\OAuthServerBundle\Entity\RefreshToken
    auth_code_class:     Taskul\OAuthServerBundle\Entity\AuthCode
    service:
        user_provider: fos_user.user_manager
        options:
            supported_scopes: user
