security:
    acl:
        connection: default
    providers:
        chainprovider:
            chain:
                providers: [fos_userbundle, my_fos_facebook_provider]
        fos_userbundle:
            id: fos_user.user_provider.username
        my_fos_facebook_provider:
            id: my.facebook.user
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # -> custom firewall for the admin area of the URL
        admin:
            pattern:            /admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
            anonymous:          true
        public:
            # since anonymous is allowed users will not be forced to login
            pattern: ^/.*
            fos_facebook:
                app_url: "http://apps.facebook.com/eventstagram/"
                server_url: "http://taskul.local/app_dev.php"
                login_path: fos_user_security_login
                check_path: fos_facebook_security_check
                default_target_path: /
                provider: my_fos_facebook_provider
                success_handler: taskul.user.handler.authentication_handler
                failure_handler: taskul.user.handler.authentication_handler
            form_login:
                login_path: fos_user_security_login
                check_path: fos_user_security_check
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                success_handler: taskul.user.handler.authentication_handler
                failure_handler: taskul.user.handler.authentication_handler
            anonymous: true
            logout:
                invalidate_session: false
        login:
            pattern: ^/login$
            security: false

        # main:
        #     pattern: ^/
        #     form_login:
        #         csrf_provider: form.csrf_provider
        #     fos_facebook:
        #         app_url: "http://apps.facebook.com/taskulnet/"
        #         server_url: "http://fosfacebook.local.com/facebookApp"
        #         login_path: /login
        #         check_path: /loginFacebook
        #         provider: my_fos_facebook_provider
        #         default_target_path: /
        #     logout:       true
        #     anonymous:    true

    access_control:
        - { path: ^/(es|en)/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(es|en)/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(es|en)/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # Admin login page needs to be access without credential
        - { path: ^/(es|en)/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(es|en)/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(es|en)/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(es|en)/admin/, role: ROLE_ADMIN }
        - { path: ^/(es|en)/frequest/, role: ROLE_USER }
        - { path: ^/(es|en)/task/, role: ROLE_USER }
        - { path: ^/(es|en)/friend/, role: ROLE_USER }
        - { path: ^/(es|en)/api/, role: ROLE_USER }
        - { path: ^/(es|en)/msg/, role: ROLE_USER }
        - { path: ^/(es|en)/dashboard, role: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT # if you are not using acl then this line must be uncommented
            - ROLE_SONATA_PAGE_ADMIN_BLOCK_EDIT
parameters:
    # ... other parameters
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
    # optionally use a custom MaskBuilder
    #sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder