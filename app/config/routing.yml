# app/config/routing.yml

timeline:
    resource: "@TimelineBundle/Controller/"
    type:     annotation
    prefix:   /

friend:
    resource: "@FriendBundle/Controller/"
    type:     annotation
    prefix:   /

main:
    resource: "@MainBundle/Controller/"
    type:     annotation
    prefix:   /

tasks:
    type: rest
    resource: "@TaskBundle/Resources/config/tasks_routes.yml"
    prefix: /api

# tasks_api_v2:
#     type: rest
#     resource: Taskul\TaskBundle\Controller\TasksRestController
#     defaults: { _format: html }
#     prefix: /api/v2
#     options: { i18n: false }

files:
    resource: "@FileBundle/Controller/"
    type:     annotation
    prefix:   /api

tags:
    type: rest
    prefix: /api
    resource: "@TagBundle/Resources/config/tags_routes.yml"

UserBundle:
    resource: "@UserBundle/Resources/config/routing.yml"
    prefix:   /

fos_comment_api:
    type: rest
    resource: "@TaskulCommentBundle/Resources/config/routing.yml"
    prefix: /api
    defaults: { _format: html }

fos_message:
    resource: "@MessageBundle/Resources/config/routing.yml"
    prefix: /msg

fos_js_routing:
    resource: "@FOSJsRoutingBundle/Resources/config/routing/routing.xml"

# taskul_oauth_server_token:
#     resource: "@TaskulOAuthServerBundle/Resources/config/routing/token.yml"

# taskul_oauth_server_authorize:
#     resource: "@TaskulOAuthServerBundle/Resources/config/routing/authorize.yml"

# taskul_oauth_server_auth_login:
#     pattern:  /oauth/v2/auth_login
#     defaults: { _controller: TaskulOAuthServerBundle:Security:login }
#     options: { i18n: false }

# taskul_oauth_server_auth_login_check:
#     pattern:  /oauth/v2/auth_login_check
#     defaults: { _controller: TaskulOAuthServerBundle:Security:loginCheck }
#     options: { i18n: false }

# sonata_page_cache:
#     resource: '@SonataCacheBundle/Resources/config/routing/cache.xml'
#     prefix: /



